-- Generated with ascii.txt and ascii.awk
-- Run qseawk -f ascii.awk ascii.txt > h2-ascii.ads for regeneration

generic
	type Character_Type is (<>);
package H2.Ascii is

	NUL                 : constant Character_Type := Character_Type'Val(0);
	SOH                 : constant Character_Type := Character_Type'Val(1);
	STX                 : constant Character_Type := Character_Type'Val(2);
	ETX                 : constant Character_Type := Character_Type'Val(3);
	EOT                 : constant Character_Type := Character_Type'Val(4);
	ENQ                 : constant Character_Type := Character_Type'Val(5);
	ACK                 : constant Character_Type := Character_Type'Val(6);
	BEL                 : constant Character_Type := Character_Type'Val(7);
	BS                  : constant Character_Type := Character_Type'Val(8);
	HT                  : constant Character_Type := Character_Type'Val(9);
	LF                  : constant Character_Type := Character_Type'Val(10);
	VT                  : constant Character_Type := Character_Type'Val(11);
	FF                  : constant Character_Type := Character_Type'Val(12);
	CR                  : constant Character_Type := Character_Type'Val(13);
	SO                  : constant Character_Type := Character_Type'Val(14);
	SI                  : constant Character_Type := Character_Type'Val(15);
	DLE                 : constant Character_Type := Character_Type'Val(16);
	DC1                 : constant Character_Type := Character_Type'Val(17);
	DC2                 : constant Character_Type := Character_Type'Val(18);
	DC3                 : constant Character_Type := Character_Type'Val(19);
	DC4                 : constant Character_Type := Character_Type'Val(20);
	NAK                 : constant Character_Type := Character_Type'Val(21);
	SYN                 : constant Character_Type := Character_Type'Val(22);
	ETB                 : constant Character_Type := Character_Type'Val(23);
	CAN                 : constant Character_Type := Character_Type'Val(24);
	EM                  : constant Character_Type := Character_Type'Val(25);
	SUB                 : constant Character_Type := Character_Type'Val(26);
	ESC                 : constant Character_Type := Character_Type'Val(27);
	FS                  : constant Character_Type := Character_Type'Val(28);
	GS                  : constant Character_Type := Character_Type'Val(29);
	RS                  : constant Character_Type := Character_Type'Val(30);
	US                  : constant Character_Type := Character_Type'Val(31);
	Space               : constant Character_Type := Character_Type'Val(32); --  
	Exclamation         : constant Character_Type := Character_Type'Val(33); -- !
	Quotation           : constant Character_Type := Character_Type'Val(34); -- "
	Number_Sign         : constant Character_Type := Character_Type'Val(35); -- #
	Dollar_Sign         : constant Character_Type := Character_Type'Val(36); -- $
	Percent_Sign        : constant Character_Type := Character_Type'Val(37); -- %
	Ampersand           : constant Character_Type := Character_Type'Val(38); -- &
	Apostrophe          : constant Character_Type := Character_Type'Val(39); -- '
	Left_Parenthesis    : constant Character_Type := Character_Type'Val(40); -- (
	Right_Parenthesis   : constant Character_Type := Character_Type'Val(41); -- )
	Asterisk            : constant Character_Type := Character_Type'Val(42); -- *
	Plus_Sign           : constant Character_Type := Character_Type'Val(43); -- +
	Comma               : constant Character_Type := Character_Type'Val(44); -- ,
	Minus_Sign          : constant Character_Type := Character_Type'Val(45); -- -
	Period              : constant Character_Type := Character_Type'Val(46); -- .
	Slash               : constant Character_Type := Character_Type'Val(47); -- /
	Zero                : constant Character_Type := Character_Type'Val(48); -- 0
	One                 : constant Character_Type := Character_Type'Val(49); -- 1
	Two                 : constant Character_Type := Character_Type'Val(50); -- 2
	Three               : constant Character_Type := Character_Type'Val(51); -- 3
	Four                : constant Character_Type := Character_Type'Val(52); -- 4
	Five                : constant Character_Type := Character_Type'Val(53); -- 5
	Six                 : constant Character_Type := Character_Type'Val(54); -- 6
	Seven               : constant Character_Type := Character_Type'Val(55); -- 7
	Eight               : constant Character_Type := Character_Type'Val(56); -- 8
	Nine                : constant Character_Type := Character_Type'Val(57); -- 9
	Colon               : constant Character_Type := Character_Type'Val(58); -- :
	Semicolon           : constant Character_Type := Character_Type'Val(59); -- ;
	Less_Than_Sign      : constant Character_Type := Character_Type'Val(60); -- <
	Equals_Sign         : constant Character_Type := Character_Type'Val(61); -- =
	Greater_Than_Sign   : constant Character_Type := Character_Type'Val(62); -- >
	Question            : constant Character_Type := Character_Type'Val(63); -- ?
	Commercial_At       : constant Character_Type := Character_Type'Val(64); -- @
	UC_A                : constant Character_Type := Character_Type'Val(65); -- A
	UC_B                : constant Character_Type := Character_Type'Val(66); -- B
	UC_C                : constant Character_Type := Character_Type'Val(67); -- C
	UC_D                : constant Character_Type := Character_Type'Val(68); -- D
	UC_E                : constant Character_Type := Character_Type'Val(69); -- E
	UC_F                : constant Character_Type := Character_Type'Val(70); -- F
	UC_G                : constant Character_Type := Character_Type'Val(71); -- G
	UC_H                : constant Character_Type := Character_Type'Val(72); -- H
	UC_I                : constant Character_Type := Character_Type'Val(73); -- I
	UC_J                : constant Character_Type := Character_Type'Val(74); -- J
	UC_K                : constant Character_Type := Character_Type'Val(75); -- K
	UC_L                : constant Character_Type := Character_Type'Val(76); -- L
	UC_M                : constant Character_Type := Character_Type'Val(77); -- M
	UC_N                : constant Character_Type := Character_Type'Val(78); -- N
	UC_O                : constant Character_Type := Character_Type'Val(79); -- O
	UC_P                : constant Character_Type := Character_Type'Val(80); -- P
	UC_Q                : constant Character_Type := Character_Type'Val(81); -- Q
	UC_R                : constant Character_Type := Character_Type'Val(82); -- R
	UC_S                : constant Character_Type := Character_Type'Val(83); -- S
	UC_T                : constant Character_Type := Character_Type'Val(84); -- T
	UC_U                : constant Character_Type := Character_Type'Val(85); -- U
	UC_V                : constant Character_Type := Character_Type'Val(86); -- V
	UC_W                : constant Character_Type := Character_Type'Val(87); -- W
	UC_X                : constant Character_Type := Character_Type'Val(88); -- X
	UC_Y                : constant Character_Type := Character_Type'Val(89); -- Y
	UC_Z                : constant Character_Type := Character_Type'Val(90); -- Z
	Left_Square_Bracket : constant Character_Type := Character_Type'Val(91); -- [
	Backslash           : constant Character_Type := Character_Type'Val(92); -- \
	Right_Square_Bracket: constant Character_Type := Character_Type'Val(93); -- ]
	Circumflex          : constant Character_Type := Character_Type'Val(94); -- ^
	Low_Line            : constant Character_Type := Character_Type'Val(95); -- _
	Grave               : constant Character_Type := Character_Type'Val(96); -- `
	LC_A                : constant Character_Type := Character_Type'Val(97); -- a
	LC_B                : constant Character_Type := Character_Type'Val(98); -- b
	LC_C                : constant Character_Type := Character_Type'Val(99); -- c
	LC_D                : constant Character_Type := Character_Type'Val(100); -- d
	LC_E                : constant Character_Type := Character_Type'Val(101); -- e
	LC_F                : constant Character_Type := Character_Type'Val(102); -- f
	LC_G                : constant Character_Type := Character_Type'Val(103); -- g
	LC_H                : constant Character_Type := Character_Type'Val(104); -- h
	LC_I                : constant Character_Type := Character_Type'Val(105); -- i
	LC_J                : constant Character_Type := Character_Type'Val(106); -- j
	LC_K                : constant Character_Type := Character_Type'Val(107); -- k
	LC_L                : constant Character_Type := Character_Type'Val(108); -- l
	LC_M                : constant Character_Type := Character_Type'Val(109); -- m
	LC_N                : constant Character_Type := Character_Type'Val(110); -- n
	LC_O                : constant Character_Type := Character_Type'Val(111); -- o
	LC_P                : constant Character_Type := Character_Type'Val(112); -- p
	LC_Q                : constant Character_Type := Character_Type'Val(113); -- q
	LC_R                : constant Character_Type := Character_Type'Val(114); -- r
	LC_S                : constant Character_Type := Character_Type'Val(115); -- s
	LC_T                : constant Character_Type := Character_Type'Val(116); -- t
	LC_U                : constant Character_Type := Character_Type'Val(117); -- u
	LC_V                : constant Character_Type := Character_Type'Val(118); -- v
	LC_W                : constant Character_Type := Character_Type'Val(119); -- w
	LC_X                : constant Character_Type := Character_Type'Val(120); -- x
	LC_Y                : constant Character_Type := Character_Type'Val(121); -- y
	LC_Z                : constant Character_Type := Character_Type'Val(122); -- z
	Left_Curly_Bracket  : constant Character_Type := Character_Type'Val(123); -- {
	Vertical_Line       : constant Character_Type := Character_Type'Val(124); -- |
	Right_Curly_Bracket : constant Character_Type := Character_Type'Val(125); -- }
	Tilde               : constant Character_Type := Character_Type'Val(126); -- ~
	DEL                 : constant Character_Type := Character_Type'Val(127);

end H2.Ascii;
