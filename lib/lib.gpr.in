project Lib is

	type Platform_Type is ("posix", "win32");
	Platform: Platform_Type := external ("platform", "posix");

	for Source_Dirs use (
		"@abs_srcdir@",
		"@abs_srcdir@/" & Platform,
		"@abs_builddir@/" & Platform
	);

	for Library_Name use "h2";
	for Library_Kind use "dynamic";
	for Library_Dir use ".";
	--for Library_Src_Dir use ".";
	for Object_Dir use "@ADA_OBJDIR@";

	for Source_Files use (
		"h2.ads",
		"h2-ascii.ads",
		"h2-pool.adb",
		"h2-pool.ads",
		"h2-os.adb",
		"h2-os.ads",
		"h2-os-file.adb",
		"h2-sysdef.ads",
		"h2-io.ads",
		"h2-io.adb",
		"h2-io-file.adb",
		"h2-io-file-get_default_option.adb",
		"h2-scheme.adb",
		"h2-scheme.ads",
		"h2-scheme-bigint.adb",
		"h2-scheme-execute.adb",
		"h2-scheme-execute-apply.adb",
		"h2-scheme-execute-evaluate.adb",
		"h2-scheme-token.adb",
		"h2-slim.ads",
		"h2-utf8.adb",
		"h2-utf8.ads",
		"h2-wide.ads",
		"h2-wide_wide.ads"
	);
	for Library_Interface use (
		"h2",
		"h2.ascii",
		"h2.io",
		"h2.pool",
		"h2.scheme",
		"h2.slim",
		"h2.sysdef",
		"h2.os",
		"h2.utf8",
		"h2.wide",
		"h2.wide_wide"
	);

	package Compiler is
		for Default_Switches ("Ada") use (
			"-gnata", "-gnato", "-gnatN",  "-gnatwl", "-gnat95", "-gnatW8", "-g"
		);
	end Compiler;

	--package Naming is
	--	case Platform is
	--		when "posix" =>
	--			for Body ("H2.OS.File") use "h2-os-file-posix.adb";
	--		when "win32" =>
	--			for Body ("H2.OS.File") use "h2-os-file-win32.adb";
	--	end case;
	--end Naming;

	--package Install is
	--	for Prefix use "@prefix@";
	--end Install;
end Lib;

